AWSTemplateFormatVersion: "2010-09-09"

Description: サンプルテンプレート

Parameters:
  VpcCidrBlock:
    Type: String
    Default: 10.0.0.0/16
  NameBase:
    Description: name tag Value
    Type: String
    Default: circleci-demo

Resources:
  # VPC
  myVPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref VpcCidrBlock
      EnableDnsSupport: true
      Tags: 
        - Key: Name
          Value: !Sub ${NameBase}-vp

  # インターネットゲートウェイ
  IGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${NameBase}-igw

  # インターネットゲートウェイをVPCにアタッチ
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref myVPC
      InternetGatewayId: !Ref IGW

  # パブリックサブネット
  pubSub1a:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-northeast-1a
      VpcId: !Ref myVPC
      CidrBlock: 10.0.10.0/24
      Tags:
        - Key: Name
          Value: !Sub ${NameBase}-pub-subnet-1a
  pubSub1c:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-northeast-1c
      VpcId: !Ref myVPC
      CidrBlock: 10.0.11.0/24
      Tags:
        - Key: Name
          Value: !Sub ${NameBase}-pub-subnet-1c

  # プライベートサブネット
  priSub1a:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-northeast-1a
      VpcId: !Ref myVPC
      CidrBlock: 10.0.20.0/24
      Tags:
        - Key: Name
          Value: !Sub ${NameBase}-pri-subnet-1a
  priSub1c:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-northeast-1c
      VpcId: !Ref myVPC
      CidrBlock: 10.0.21.0/24
      Tags:
        - Key: Name
          Value: !Sub ${NameBase}-pri-subnet-1c

  # ルートテーブル
  PubSubRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref myVPC
      Tags:
        - Key: Name
          Value: !Sub ${NameBase}-pubsub-rt
  PriSubRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref myVPC
      Tags:
        - Key: Name
          Value: !Sub ${NameBase}-prisub-rt

  # PubSubとインターネット間のルーティング
  PubSubRTToInternet:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PubSubRT
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW

  # ルートテーブルをサブネットに関連付け
  AssoPubSubRT1a:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref pubSub1a
      RouteTableId: !Ref PubSubRT

  AssoPubSubRT1c:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref pubSub1c
      RouteTableId: !Ref PubSubRT

  #ElasticIP作成
  ElasticIPAssociate:
    Type: AWS::EC2::EIPAssociation
    DependsOn: MyEC2Instance
    Properties: 
      EIP: 35.76.45.95
      InstanceId: !Ref MyEC2Instance
    

  # EC2インスタンス
  MyEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: ap-northeast-1a
      KeyName: circleci-demo
      ImageId: ami-0ad34c34d47746008
      InstanceType: t2.micro
      NetworkInterfaces:
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          SubnetId: !Ref pubSub1a
          GroupSet:
            - !Ref EC2SG
      UserData: !Base64 |
        #!/bin/bash
        sudo yum install -y git
      Tags:
        - Key: Name
          Value: !Sub ${NameBase}-ec2

  # セキュリティグループ
  EC2SG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${NameBase}-ec2-sg
      GroupDescription: Allow SSH and HTTP access only MyIP
      VpcId: !Ref myVPC
      SecurityGroupIngress:
        # http
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        # ssh
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        # puma
        - IpProtocol: tcp
          FromPort: 3000
          ToPort: 3000
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ${NameBase}-ec2-sg
  # RDS
  MyDBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: "16"
      DBInstanceClass: db.t2.micro
      AvailabilityZone: ap-northeast-1a
      BackupRetentionPeriod: "7"
      DBInstanceIdentifier: !Sub ${NameBase}-web
      DBName: circlecidemo
      DBParameterGroupName: !Ref DBParameterGroup
      DBSubnetGroupName: !Ref DBSubnetGroup
      Engine: mysql
      EngineVersion: "8.0"
      MasterUsername: "root"
      MasterUserPassword: "dbpassword"
      MultiAZ: "false"
      PreferredBackupWindow: "18:00-18:30"
      PreferredMaintenanceWindow: "sat:19:00-sat:19:30"
      PubliclyAccessible: "false"
      StorageType: gp2
      VPCSecurityGroups:
        - !Ref RDSSecurityGroup
      Tags:
        - Key: Name
          Value: !Sub ${NameBase}-rds
    DeletionPolicy: "Delete"
  
  DBParameterGroup:
    Type: "AWS::RDS::DBParameterGroup"
    Properties:
      Family: "MySQL8.0"
      Description: !Sub "${NameBase}-mysql80"

  RDSSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      VpcId: !Ref myVPC
      GroupName: !Sub "${NameBase}-db-sg"
      GroupDescription: !Sub "${NameBase}-db-sg"
      Tags:
        - Key: "Name"
          Value: !Sub "${NameBase}-db-sg"
# Rule
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref EC2SG

  DBSubnetGroup: 
    Type: "AWS::RDS::DBSubnetGroup"
    Properties: 
      DBSubnetGroupName: !Sub "${NameBase}-db-subnet-gp"
      DBSubnetGroupDescription: !Sub "${NameBase}-db-subnet-gp"
      SubnetIds: 
        - !Ref priSub1a
        - !Ref priSub1c